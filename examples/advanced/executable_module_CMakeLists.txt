# NOTE: This file should not be executed directly using CMake, but instead
#       should be referenced via a find_package() command using the name
#       of the corresponding *-config.cmake file in the same directory.

cmake_minimum_required(VERSION 3.0)

# Find 3rd-party packages.
# ex. find_package(Boost COMPONENTS system thread)
# ex. find_package(OpenCV COMPONENTS core)

# List of source files.
set(SOURCE_FILES
  # ex. file.h
  # ex. file.cpp
  # ex. src/file.cpp
  # ex. ${CMAKE_CURRENT_LIST_DIR}/../file.cpp
)

# Set the name of this module's source folder in the IDE project (e.g. Visual Studio).
source_group(${CMH_MODULE_NAME} FILES ${SOURCE_FILES})

# Create an executable.
add_library(${CMH_MODULE_NAME} ${SOURCE_FILES})

# Set the compile definitions necessary to use this module.
target_compile_definitions(${CMH_MODULE_NAME} PUBLIC
  # ex. PREPROCESSOR_FLAG
  # ex. PREPROCESSOR_PATH="${CMAKE_CURRENT_LIST_DIR}/../path"
)

# Set the include directories necessary to use this module.
target_include_directories(${CMH_MODULE_NAME} PUBLIC
  # ex. ${CMAKE_CURRENT_LIST_DIR}/src
  # ex. ${Boost_INCLUDE_DIR}
  # ex. ${OpenCV_INCLUDE_DIRS}
)

# Set the libraries that need to be linked to this module.
target_link_libraries(${CMH_MODULE_NAME} PUBLIC
  # ex. ${Boost_LIBRARIES}
  # ex. ${OpenCV_LIBS}
)

# Finalize this module.
cmh_end_module()
